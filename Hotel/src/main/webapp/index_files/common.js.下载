// jquery.checkbox.js
var checks;(function(a){a.fn.checkbox=function(b){var g={pos:1},e=a.extend({},g,b),d=this,h=d[0],c=d.length-1,f=d.not(h).filter(":checked").length,i=e.pos;if(i>0){h=d[i-1]||h;}else{h=d[c+i+1]||h;}return this.click(function(){if(this==h){if(this.checked){f=c;d.attr("checked","true");}else{f=0;d.attr("checked","");}}else{if(this.checked){if(++f==c){h.indeterminate=false;a(h).attr("checked","true");}}else{if(--f==0){h.indeterminate=false;a(h).attr("checked","");}}if(f>0&&f<c){h.indeterminate=true;}}checks=f;});};})(jQuery);

// jquery.validate.js

(function($) {
	var validateType = {
	required: {
		mesg: "${0}必填",
		func: function($input) {
			return $.trim($input.val());
		}
	},
	// 日期
	date: {
		mesg: "${0}格式不正确:yyyy-mm-dd",
		func: function($input) {
			return $input.val() == "" || /^(?:19|20)\d{2}-(?:0?[1-9]|1[012])-(?:0?[1-9]|[12]\d|3[01])$/.test($input.val());
		}
	},
	// 邮箱地址
	email: {
		mesg: "${0}格式不正确",
		func: function($input) {
			return $input.val() == "" || /^(?:\w+\.?)*\w+@(?:\w+\.)+\w+$/.test($input.val());
		}
	},
	/**
	 * 只能检测静态地址
	 */
	// 网页地址
	url: {
		mesg: "${0}格式不正确",
		func: function($input) {
			return $input.val() == "" 
				|| /^(?:https?|ftp):\/\/(?:[a-zA-Z0-9]\w*\.)+[a-zA-Z0-9]\w*\/?(?:(?:[a-zA-Z0-9](?:\w*|-)+\/)+(?:[a-zA-Z0-9]+\.[jsx]?html?)?)?$/.test($input.val());
		}
	},
	// 移动电话
	mobile: {
		mesg: "${0}格式不正确",
		func: function($input) {
			return $input.val() == "" || /^0?1(?:3[0-9]|5[0-9]|8[5-9])\d{8}$/.test($input.val());
		}
	},
	// 固定电话
	tel: {
		mesg: "${0}格式不正确",
		func: function($input) {
			return $input.val() == "" || /^0\d{2,3}-?\d{7,8}$/.test($input.val());
		}
	},
	// 邮编
	postcode: {
		mesg: "${0}格式不正确",
		func: function($input) {
			return $input.val() == "" || /^\d{6}$/.test($input.val());
		}
	},
	// 钱
	money: {
		mesg: "${0}数字无效",
		func: function($input) {
			return $input.val() == "" || /^(?:[1-9]\d*(\.\d{1,2})?|0\.\d{1,2})$/.test($input.val());
		}
	},
	// 用户名
	username: {
		mesg: "${0}必须是字母、数字和下划线并且以字母开头",
		func: function($input) {
			return $input.val() == "" || /^[a-zA-Z]\w*$/.test($input.val());
		}
	},
	// 密码
	password: {
		mesg: "${0}必须是字母、数字和常用符号",
		func: function($input) {
			return $input.val() == "" || /^[-a-zA-Z0-9`~!@#$%^&*()_=+\[{\]}\\|;:'",<.>\/?]+$/.test($input.val());
		}
	},	
	// 长度
	length: {
		mesg: "${0}的长度必须在${1}和${2}之间",
		func: function($input) {
			return $input.val() == ""
				|| ($input.attr('length1') <= $input.val().length 
				&& $input.val().length <= $input.attr('length2'));
		}
	},
	// 数字范围
	range: {
		mesg: "${0}的数值必须在${1}和${2}之间",
		func: function($input) {
			return $input.val() == "" 
				|| ($input.attr('range1') <= new Number($input.val())
				&& new Number($input.val()) <= $input.attr('range2'));
		}
	},
	depend: {
		mesg: "${0}必填",
		func: function($input) {
			var dependsName = $input.attr('on'), condition = $input.attr('condition');
			if ($input.parents('form').find('[name=' + dependsName + '][value=' + condition + ']').is(':checked')) {
				return $input.val();
			}
			return true;
		}
	},
	positive :{
		mesg: "${0}必须输入大于0的数值",
		func: function($input) {
			var a = $input.val();
			return a == null || a == "" || (!isNaN(a) && !/^\s+$/.test(a) && a > 0);
		}
	},
	compare: {
		mesg: "${0}必须${1}",
		func: function($input) {
			var compareName = $input.attr('to'), expression = $input.attr('expression');
			switch(expression) {
				case '>':
				case 'gt': 
					return $input.val() > $input.parents('form').find('[name=' + compareName + ']').val(); 
				case '>=':
					return $input.val() >= $input.parents('form').find('[name=' + compareName + ']').val(); 
				case '==':
				case 'eq': 
					return $input.val() == $input.parents('form').find('[name=' + compareName + ']').val(); 
				case '<=':
					return $input.val() <= $input.parents('form').find('[name=' + compareName + ']').val(); 
				case '<':
				case 'lt':
					return $input.val() < $input.parents('form').find('[name=' + compareName + ']').val(); 
					default: return true;
			}
		}
	},
	comparefloat: {
		mesg: "${0}必须${1}",
		func: function($input) {
			var compareName = $input.attr('to'), expression = $input.attr('expression');
			if ($input.parents('form').find('[name=' + compareName + ']').val() && $input.val()) {
				switch(expression) {
					case '>':
					case 'gt': 
						return parseFloat($input.val()) > $input.parents('form').find('[name=' + compareName + ']').val(); 
					case '>=':
						return parseFloat($input.val()) >= $input.parents('form').find('[name=' + compareName + ']').val(); 
					case '==':
					case 'eq': 
						return parseFloat($input.val()) == $input.parents('form').find('[name=' + compareName + ']').val(); 
					case '<=':
						return parseFloat($input.val()) <= $input.parents('form').find('[name=' + compareName + ']').val(); 
					case '<':
					case 'lt':
						return parseFloat($input.val()) < $input.parents('form').find('[name=' + compareName + ']').val(); 
						default: return true;
					}
				}
				return true;
			}
		},
		unique: {
			mesg: "${0}已存在",
			func: function($input) {
				var curvalue = $input.val(), oldvalue=$input.attr('oldvalue'), result;
				if (curvalue && (curvalue != oldvalue)) {
					$.ajax({
						url: ctx + "/default/common/check",
						data: {table: $input.attr('table'), field: $input.attr('field'), value: curvalue},
						dataType: "json",
						async: false,
						success: function(amount) {
							result = amount == "1"? true: false;
						}
					});
				}
				return !result;
			}
		}
	};

	$.fn.validateInput = function() {
		return this.blur(function() {
			var $this = $(this);
			var vtype = $(this).attr('vtype').split(/\s+/);
			$.each(vtype, function(index,type) {
				var mesg = validateType[type].mesg;
				var func = validateType[type].func;
				$this.next('span.validate').remove();
				if (!func($this)) {
					var max = mesg.match(/\$/g).length;
					mesg = mesg.replace("${0}", $this.attr('label'));
					mesg = mesg.replace("${0}", $this.attr('label') == undefined? "": $this.attr('label'));
					for (var i = 1; i < max; i++) {
						mesg = mesg.replace("${" + i + "}", $this.attr(type + i));
					}
					$("<span class='validate'>" + mesg + "</span>").insertAfter($this);
					return false;
				}
			});
		});
	};
	
	$.fn.validateForm = function() {
		$(this).find('[vtype]').each(function() {
			$(this).blur();
		});
		return $(this).find('span.validate').length == 0;
	};
	
	
})(jQuery);

$(document).ready(function() {
//	/*页眉跳转首页*/
//	$(".mes a:contains('首页')").click(function() {
//		window.location.href=ctx;
//	});
//	if (!$('[vtype=required]').next().is('span')) {
//		$('[vtype*=required]').after('<span style="color: red"> * </span>');
//	}
//	$('<style type="text/css">span.validate {color: red;}</style>').appendTo('head');
//	$('input[vtype]').validateInput();
//
//	$('form').submit(function() {
//		return $(this).validateForm();
//	});
});

function trim(objId) {
    var value = jQuery("#" + objId).val();

    jQuery("#" + objId).val(toTrim(value));
}

function checkLogin(fn,url2quickOrder) {
//	var result = true;
	$.ajax({
		type: "POST",
		url: $("#userInfoJsonUrl").val()+"?random="+Math.random(),
		data: {},
		dataType: "json",
		async:false,
		success: function (data) {
			var user = data;
			if (user) {
				fn();
				//result = true;
			} else {
				//result = false;
				$.ajax({
					type: "POST",
					url: $("#loginJsonUrl").val() ,
					data: {preURL:window.location.href},
					dataType: "text",
					success: function (data) {
						artDialog({
							title:'请登录',
							content:data,
							lock:true,
							opacity:0.2,
							focus:false,
							//width:400,
							//height:400,
							close:function (){
								$.ajax({
									type: "POST",
									url: $("#userInfoJsonUrl").val()+"?random="+Math.random(),
									data: {},
									dataType: "json",
									async:false,
									success: function (data) {
										var user = data;
										if (user) {
											if($("#memberType")) {//获取会员类型
												$("#memberType").val(user.memberType);
												chkIsCommentBtnHidden();
											}
											fn();
										}
									}
								});
							},
							id: 'ajaxLogin'
						});
						/*快速预订*/
						if(url2quickOrder) {
							$(".login_r .login_btn").live("click",function() {
								url2quickOrder = url2quickOrder.replace("order/confirmorder","resv/resvfast");
								window.location.href=url2quickOrder;
							});
						} else {
							$(".login_r .login_btn").live("click",function() {
								window.location.href=$("#hotelUrl").val();
							});
						}
						setTimeout("refreshPersonal()",1500);
						setTimeout("refreshCompany()",3000);
					}
				});
				
			}
		}
	});
	//return result;
}

/**
 *检查是否隐藏我要评价按钮
 */
function chkIsCommentBtnHidden() {
	$(".orange_txt").each(function(index,domEle){
		if($(domEle).html() == "我要评价"&&$("#memberType").val() == "CM") {
			$(domEle).hide();
		}
	});
}

/**
 * 添加活动页面cookie值
 */
function addActivityNumCookie(_num)
{
	var cookietime = new Date(); 
	cookietime.setTime(cookietime.getTime() + (30 * 60 * 1000));//coockie保存30分钟
	$.cookie("stopicid", "PC_"+_num,{path : "/",expires:cookietime}); 
}

/**
 * 房型列表tr行高控制
 */
function controlTrHeight(_domEle) {
	_domEle.find("table tr").each(function(index,domEl) {
		if($(domEl).height()>40) {
			$(domEl).find("td").css({
				"line-height":"normal"
			});
		}
	});
}

/**
 * 判断IE版本
 */
var isIE = function(ver){
    var b = document.createElement('b');
    b.innerHTML = '<!--[if IE ' + ver + ']><i></i><![endif]-->';
    return b.getElementsByTagName('i').length === 1;
};